Comandos más utilizados
CD  (CAMBIAR DIRECTORIO)
*cd Nombre_carpeta    (Cambia a un directorio específico, siempre que se encuentre en un      mismo nivel)
LS (LISTAR)
*ls     (Lista todos los archivos de un directorio)
*ls –a    (Lista todos los archivos incluyendo los ocultos)
*ls –R    (Muestra todas las carpetas y archivos contenidos en ellas)
MV (MOVER)
*mv Carpeta_1 Carpeta_2     (Mueve el contenido de la Carpeta_1 a la Carpeta_2, siempre que Carpeta_2 EXISTA. Igual tratamiento para archivos)
MV (RENOMBRAR)
*mv Carpeta_1 Carpeta_2     (Renombra la Carpeta_1, siempre que Carpeta_2 NO EXISTA. Igual tratamiento para archivos)
CP (COPIAR)
cp Carpeta_1  Carpeta_2     (Copia la Carpeta_1 bajo el nombre Carpeta_2. Igual tratamiento con archivos) 
NANO (EDICIÓN DE ARCHIVO)
*nano Nombre_archivo      (Se abre ventana de edición, editamos, Ctrl + O para Guardar, Enter, Ctrl + X para salir de ventana)
CLEAR (LIMPIAR)
*clear    (Limpiar la terminal)
MKDIR (CREAR CARPETA)
*mkdir Nombre_Carpeta     (Crea carpeta Nombre_Carpeta)
TOUCH (CREAR ARCHIVOS)
*touch Nombre_archivo     (Crea archivo Nombre_archivo
RM (ELIMINAR)
*rm Nombre_archivo     (Borra Nombre_archivo)
*rm –r Nombre_Carpeta     (Borra Nombre_Carpeta con contenido)
*rm –rf Nombre_Carpeta     (Borra forzosamente Nombre_Carpeta con contenido)
*rmdir Nombre_Carpeta     (Borra Nombre_Carpeta vacío)
Comandos GIT
*git --version     (Para saber la versión de Git)
*git init      (Inicia repositorio local vacío, Working Directory)
*git config user .name “Nombre_usuario”     (Para evitar configurarlo nuevamente colocar --global luego de la palabra config)
*git config user .email “email”      (Para evitar configurarlo nuevamente colocar --global luego de la palabra config)
*git remote add origin “url github”     (Relaciona repositorio local con remoto)
*git remote –v     (Se utiliza para comprobar relación de repositorio local con remoto)
*git add .       (Agrega los archivos al repositorio, pasa del estado Working Directory al Staging área)
*git status     (Informa el estado de las carpetas y archivos)
*git commit –m “Descripcion”      (Guarda los cambios en el repositorio, pasando del estado Staging área al Local Repository)
*git log     (Permite visualizar los commit realizados y quien los realiza)
*git branch ó git branch --list      (lista las ramas existentes) 
*git branch Nombre_rama     (Crea una nueva rama Nombre_rama)
*git branch –M Nombre_rama      (Cambia a la rama Nombre_rama)
*git checkout Nombre_rama      (Moverse de una rama a Nombre_rama solo si no existen cambios)
*git branch –d Nombre_rama      (Elimina la rama Nombre_rama siempre y cuando no tenga cambios que fusionar con rama principal main)
*git branch –D Nombre_rama      (Fuerza la eliminación de Nombre_rama aun con cambios sin fusionar con rama principal main)
*git push origin main       (Subida de los archivos y/o carpetas al repositorio remoto)
*git clone “url Github”       (Crea una copia exacta en la computadora de todos los archivos existentes en un repositorio remoto)
*git pull origin main       (Baja solo los archivos que hayan sido actualizados en otra maquina)
*git merge Nombre_rama       (fusiona los cambios de Nombre_rama en la rama que estemos ubicados)

